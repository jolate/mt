\begin{thebibliography}{10}

\bibitem{gluclose}
Gilles Audemard and Laurent Simon.
\newblock Predicting learnt clauses quality in modern sat solvers.
\newblock In {\em Proceedings of the 21st international jont conference on
  Artifical intelligence}, IJCAI'09, pages 399--404, San Francisco, CA, USA,
  2009. Morgan Kaufmann Publishers Inc.

\bibitem{bs97}
Roberto~J. Bayardo.
\newblock Using csp look-back techniques to solve real-world sat instances.
\newblock pages 203--208. AAAI Press, 1997.

\bibitem{plingeling}
Armin Biere.
\newblock {Lingeling, Plingeling, PicoSAT and PrecoSAT at SAT Race 2010}.
\newblock
  \url{http://baldur.iti.uka.de/sat-race-2010/descriptions/solver_1%2B2%2B3%2B%
6.pdf}, 2010.
\newblock [Online; accessed 01-April-2012].

\bibitem{cook1971}
S.~A. Cook.
\newblock The complexity of theorem-proving procedures.
\newblock {\em proc. 3rd ann. ACM symp. on theory of computing}, pages
  151--158, 1971.

\bibitem{dpll}
Martin Davis, George Logemann, and Donald~W. Loveland.
\newblock A machine program for theorem-proving.
\newblock {\em Commun. ACM}, 5(7):394--397, 1962.

\bibitem{perf}
Arnaldo~Carvalho de~Melo.
\newblock {Description of ppfolio}.
\newblock \url{http://vger.kernel.org/~acme/perf/lk2010-perf-paper.pdf}, 2010.
\newblock [Online; accessed 03-May-2012].

\bibitem{dec90}
Rina Dechter.
\newblock Enhancement schemes for constraint processing: Backjumping, learning,
  and cutset decomposition.
\newblock {\em Artif. Intell.}, 41(3):273--312, 1990.

\bibitem{minisat}
Niklas Eén and Niklas Sörensson.
\newblock An extensible sat-solver.
\newblock In Enrico Giunchiglia and Armando Tacchella, editors, {\em SAT},
  volume 2919 of {\em Lecture Notes in Computer Science}, pages 502--518.
  Springer, 2003.

\bibitem{manysat}
Youssef Hamadi, Said Jabbour, and Lakhdar Sais.
\newblock Manysat: a parallel sat solver.
\newblock {\em Journal on Satisfiability, Boolean Modeling and Computation},
  6:245--262, 2009.

\bibitem{heavytail}
Holger~H. Hoos.
\newblock Heavy-tailed behaviour in randomised systematic search algorithms for
  sat?
\newblock Technical report, 1999.

\bibitem{karp1972}
Richard~M. Karp.
\newblock Reducibility among combinatorial problems.
\newblock {\em Complexity of Computer Computations}, pages 85--103, 1972.

\bibitem{sartagnan}
Stephan Kottler and Michael Kaufmann.
\newblock {SA}r{T}agnan - {A} parallel portfolio {SAT} solver with lockless
  physical clause sharing.
\newblock In {\em Pragmatics of SAT}, 2011.

\bibitem{LMS07}
I.~Lynce and J.~Marques-Silva.
\newblock Random backtracking in backtrack search algorithms for
  satisfiability.
\newblock {\em Discrete Appl. Math.}, 155(12):1604--1612, June 2007.

\bibitem{cdcl2}
Joao~P. Marques-Silva, Ines Lynce, and Sharad Malik.
\newblock {\em Conflict-Driven Clause Learning SAT Solvers}, chapter~4, pages
  131--153.

\bibitem{grasp}
Joaäo~P. Marques-silva and Karem~A. Sakallah.
\newblock Grasp: A search algorithm for propositional satisfiability.
\newblock {\em IEEE Transactions on Computers}, 48:506--521, 1999.

\bibitem{overview}
Ruben Martins, Vasco~M. Manquinho, and Inês Lynce.
\newblock An overview of parallel sat solving.
\newblock {\em Constraints}, 17(3):304--347, 2012.

\bibitem{chaff}
Matthew~W. Moskewicz, Conor~F. Madigan, Ying Zhao, Lintao Zhang, and Sharad
  Malik.
\newblock Chaff: Engineering an efficient sat solver.
\newblock In {\em DAC}, pages 530--535. ACM, 2001.

\bibitem{valgrind}
Nicholas Nethercote and Julian Seward.
\newblock Valgrind: a framework for heavyweight dynamic binary instrumentation.
\newblock {\em SIGPLAN Not.}, 42(6):89--100, June 2007.

\bibitem{DP1960}
Davis Putnam and Martin Hillary.
\newblock A computing procedure for quantification theory.
\newblock {\em Journal of the ACM}, 7(3):201--215, 1960.

\bibitem{Rob65}
John~Alan Robinson.
\newblock A machine-oriented logic based on the resolution principle.
\newblock {\em J. ACM}, 12(1):23--41, 1965.

\bibitem{ppfolio}
O.~Rousell.
\newblock {Description of ppfolio}.
\newblock \url{http://www.cril.univ-artois.fr/~roussel/ppfolio/solver1.pdf},
  2010.
\newblock [Online; accessed 01-April-2012].

\bibitem{ig}
Lawrence Ryan.
\newblock Efficient algorithms for clause-learning sat solvers, 2004.

\bibitem{miraxt}
Tobias Schubert, Matthew Lewis, and Bernd Becker.
\newblock Pamiraxt: parallel sat solving with threads and message passing.
\newblock {\em Journal of Satisfiability, Boolean Modeling and Computation},
  6(4):203--222, 2009.

\bibitem{vsids}
Jaeheon Yi.
\newblock The effect of vsids on sat solver performance.
\newblock 2009.

\bibitem{sato}
Hantao Zhang.
\newblock Sato: An efficient propositional prover.
\newblock In William McCune, editor, {\em CADE}, volume 1249 of {\em Lecture
  Notes in Computer Science}, pages 272--275. Springer, 1997.

\bibitem{cdcl1}
Lintao Zhang, Conor~F. Madigan, Matthew~W. Moskewicz, and Sharad Malik.
\newblock Efficient conflict driven learning in boolean satisfiability solver.
\newblock In {\em ICCAD}, pages 279--285, 2001.

\end{thebibliography}
