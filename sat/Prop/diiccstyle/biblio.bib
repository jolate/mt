@Book{ knuth1997,
	author = "Donald E. Knuth",
	address = "Boston, MA, USA",
	interhash = "be11ac7e102d64e19237d65316e613f1",
	intrahash = "ee3f7d70febf87bc4d3b49640d9baa20",
	publisher = "Addison-Wesley Longman Publishing Co., Inc.",
	title = "The art of computer programming, volume 2 (3rd ed.): seminumerical algorithms",
	url = "http://portal.acm.org/citation.cfm?id=270146",
	year = 1997,
	timestamp = "2007-10-23T15:51:41.000+0200",
	keywords = "algorithms",
	added-at = "2007-10-23T15:51:41.000+0200",
	isbn = "0201896842",
	biburl = "http://www.bibsonomy.org/bibtex/2ee3f7d70febf87bc4d3b49640d9baa20/eutrimer"
}

@Article{ cook1971,
	title = "The complexity of theorem-proving procedures",
	author = "S. A. Cook",
	journal = "proc. 3rd ann. ACM symp. on theory of computing",
	pages = "151--158",
	year = "1971",
	address = "New York, USA"
}

@Article{ karp1972,
	title = "Reducibility Among Combinatorial Problems",
	author = "Richard M. Karp",
	editor = "R. E. Miller and J. W. Thatcher",
	journal = "Complexity of Computer Computations",
	pages = "85--103",
	year = "1972",
	address = "New York, USA"
}

@Article{ DP1960,
	title = "A Computing Procedure for Quantification Theory",
	author = "Davis Putnam and Martin Hillary",
	journal = "Journal of the ACM",
	pages = "201--215",
	volume = "7",
	number = "3",
	year = "1960"
}

@Article{ dec97,
	title = "Bucket elimination: A unifying framework for processing hard and soft constraints",
	author = "R. Dechter",
	journal = "Constraints: An International Journal",
	pages = "51--55",
	volume = "2",
	year = "1997"
}

@Article{ SLB09,
	title = "PaMiraXT: Parallel SAT Solving with Threads and Message Passing",
	author = "Tobias Schubert and Matthew Lewis and Bernd Becker",
	journal = "Journal on Satisfiability, Boolean Modeling and Computation",
	pages = "203--222",
	volume = "6",
	year = "2009"
}

@misc{ ppfolio,
  author = {O. Rousell},
  title = {{Description of ppfolio}},
  howpublished = "\url{http://www.cril.univ-artois.fr/~roussel/ppfolio/solver1.pdf}",
  year = {2010}, 
  note = "[Online; accessed 01-April-2012]"
}

@Article{ manysat,
	title = "ManySAT: a Parallel SAT Solver",
	author = "Youssef Hamadi and Said Jabbour and Lakhdar Sais",
	journal = "Journal on Satisfiability, Boolean Modeling and Computation",
	pages = "245--262",
	volume = "6",
	year = "2009"
}

@Article{ vsids,
	title = "The Effect of VSIDS on SAT Solver Performance",
	author = "Jaeheon Yi",
	year = "2009"
}

@misc{ plingeling,
  author = {Armin Biere},
  title = {{Lingeling, Plingeling, PicoSAT and PrecoSAT at SAT Race 2010}},
  howpublished = "\url{http://baldur.iti.uka.de/sat-race-2010/descriptions/solver_1%2B2%2B3%2B6.pdf}",
  year = {2010}, 
  note = "[Online; accessed 01-April-2012]"
}

@conference{ sartagnan,
author = "Stephan Kottler and Michael Kaufmann",
booktitle = "Pragmatics of SAT",
keywords = "multi-core, SAT, parallel",
title = " {SA}r{T}agnan - {A} parallel portfolio {SAT} solver with lockless physical clause sharing",
year = "2011",
}

@article { miraxt,
    author       = {Schubert, Tobias and Lewis, Matthew and Becker, Bernd},
    title        = {PaMiraXT: parallel SAT solving with threads and message passing.},
    year         = {2009},
    journal      = {Journal of Satisfiability, Boolean Modeling and Computation},
    volume       = {6},
    number       = {4},
    issn         = {1574-0617},
    pages        = {203-222},
    publisher    = {Delft University of Technology, Delft; IOS Press, Amsterdam},
    abstract     = {Summary: This article describes PaMiraXT, a powerful parallel SAT algorithm. PaMiraXT follows a master/client model based on message passing, making it suitable for any kind of workstation cluster. For the clients, MiraXT is used, which itself is thread-based parallel solver designed to take advantage of current and future shared memory multiprocessor systems. We highlight design and implementation details that allow the threads/clients to run and cooperate efficiently. Experimental results show that MiraXT compares well to other state-of-the-art SAT algorithms. In single-threaded mode, it outperforms MiniSat2, PicoSAT 535, and RSat 2.01, while in multi-threaded mode, MiraXT provides cutting edge performance, as it solves significantly more instances within the given time limit. A case study, using three copies of MiraXT with a total of 8 threads as clients, underlines the potential of PaMiraXT, resulting in a speedup of 5.62 on the industrial benchmarks of the 2007 SAT competition.},
    identifier   = {05620835},
}

@inbook{ cdcl,
   Author = {Marques-Silva, Joao P. and Lynce, Ines and Malik, Sharad},
   Title = {Conflict-Driven Clause Learning SAT Solvers},
   Chapter = {4},
   Pages = {131-153},
}


