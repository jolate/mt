%!PS-Adobe-2.0
%%Title: experiment1.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Jun 15 11:51:46 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 302 410
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (experiment1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Leo Ferres,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jun 15 11:51:46 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-Roman) findfont 100 scalefont setfont
0.500 UL
LTb
600 1009 M
63 0 V
stroke
540 1009 M
[ [(Times-Roman) 100.0 0.0 true true 0 (-45)]
] -33.3 MRshow
0.500 UL
LTb
600 1209 M
63 0 V
stroke
540 1209 M
[ [(Times-Roman) 100.0 0.0 true true 0 (-40)]
] -33.3 MRshow
0.500 UL
LTb
600 1409 M
63 0 V
stroke
540 1409 M
[ [(Times-Roman) 100.0 0.0 true true 0 (-35)]
] -33.3 MRshow
0.500 UL
LTb
600 1609 M
63 0 V
stroke
540 1609 M
[ [(Times-Roman) 100.0 0.0 true true 0 (-30)]
] -33.3 MRshow
0.500 UL
LTb
600 1809 M
63 0 V
stroke
540 1809 M
[ [(Times-Roman) 100.0 0.0 true true 0 (-25)]
] -33.3 MRshow
0.500 UL
LTb
600 2010 M
63 0 V
stroke
540 2010 M
[ [(Times-Roman) 100.0 0.0 true true 0 (-20)]
] -33.3 MRshow
0.500 UL
LTb
600 2210 M
63 0 V
stroke
540 2210 M
[ [(Times-Roman) 100.0 0.0 true true 0 (-15)]
] -33.3 MRshow
0.500 UL
LTb
600 2410 M
63 0 V
stroke
540 2410 M
[ [(Times-Roman) 100.0 0.0 true true 0 (-10)]
] -33.3 MRshow
0.500 UL
LTb
600 2610 M
63 0 V
stroke
540 2610 M
[ [(Times-Roman) 100.0 0.0 true true 0 (-5)]
] -33.3 MRshow
0.500 UL
LTb
600 2810 M
63 0 V
stroke
540 2810 M
[ [(Times-Roman) 100.0 0.0 true true 0 ( 0)]
] -33.3 MRshow
0.500 UL
LTb
600 1009 M
0 63 V
stroke
600 909 M
[ [(Times-Roman) 100.0 0.0 true true 0 ( 1)]
] -33.3 MCshow
0.500 UL
LTb
960 1009 M
0 63 V
stroke
960 909 M
[ [(Times-Roman) 100.0 0.0 true true 0 ( 2)]
] -33.3 MCshow
0.500 UL
LTb
1320 1009 M
0 63 V
stroke
1320 909 M
[ [(Times-Roman) 100.0 0.0 true true 0 ( 3)]
] -33.3 MCshow
0.500 UL
LTb
1680 1009 M
0 63 V
stroke
1680 909 M
[ [(Times-Roman) 100.0 0.0 true true 0 ( 4)]
] -33.3 MCshow
0.500 UL
LTb
2040 1009 M
0 63 V
stroke
2040 909 M
[ [(Times-Roman) 100.0 0.0 true true 0 ( 5)]
] -33.3 MCshow
0.500 UL
LTb
2400 1009 M
0 63 V
stroke
2400 909 M
[ [(Times-Roman) 100.0 0.0 true true 0 ( 6)]
] -33.3 MCshow
0.500 UL
LTb
0.500 UL
LTb
600 2810 M
0 -1801 V
1800 0 V
0 1801 R
-1800 0 R
stroke
LCb setrgbcolor
250 1909 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 100.0 0.0 true true 0 (Speedup)]
] -33.3 MCshow
grestore
LTb
LCb setrgbcolor
1500 759 M
[ [(Times-Roman) 100.0 0.0 true true 0 (# of threads)]
] -33.3 MCshow
LTb
1.000 UP
0.500 UL
LTb
0.500 UP
0.500 UL
LT1
LTb
1620 3969 M
[ [(Times) 60.0 0.0 true true 0 (anbul-dated-5-15-u.cnf)]
] -33.3 MRshow
LT1
1680 3969 M
303 0 V
600 2810 M
360 -46 V
360 -199 V
360 -78 V
360 -255 V
360 -83 V
600 2810 Pls
960 2764 Pls
1320 2565 Pls
1680 2487 Pls
2040 2232 Pls
2400 2149 Pls
1831 3969 Pls
0.500 UP
0.500 UL
LT1
LTb
1620 3910 M
[ [(Times) 60.0 0.0 true true 0 (anbul-part-10-15-s.cnf)]
] -33.3 MRshow
LT1
1680 3910 M
303 0 V
600 2810 M
960 2574 L
360 -375 V
360 -247 V
360 -361 V
360 -218 V
600 2810 Crs
960 2574 Crs
1320 2199 Crs
1680 1952 Crs
2040 1591 Crs
2400 1373 Crs
1831 3910 Crs
0.500 UP
0.500 UL
LT1
LTb
1620 3851 M
[ [(Times) 60.0 0.0 true true 0 (fuhs-aprove-16.cnf)]
] -33.3 MRshow
LT1
1680 3851 M
303 0 V
600 2810 M
360 -41 V
360 -196 V
360 -113 V
360 -234 V
360 -95 V
600 2810 Star
960 2769 Star
1320 2573 Star
1680 2460 Star
2040 2226 Star
2400 2131 Star
1831 3851 Star
0.500 UP
0.500 UL
LT1
LTb
1620 3792 M
[ [(Times) 60.0 0.0 true true 0 (goldb-heqc-alu4mul.cnf)]
] -33.3 MRshow
LT1
1680 3792 M
303 0 V
600 2810 M
360 -29 V
360 -176 V
360 -70 V
360 -221 V
360 -71 V
600 2810 Box
960 2781 Box
1320 2605 Box
1680 2535 Box
2040 2314 Box
2400 2243 Box
1831 3792 Box
0.500 UP
0.500 UL
LT1
LTb
1620 3733 M
[ [(Times) 60.0 0.0 true true 0 (goldb-heqc-i8mul.cnf)]
] -33.3 MRshow
LT1
1680 3733 M
303 0 V
600 2810 M
360 -58 V
360 -259 V
360 -152 V
360 -331 V
360 -175 V
600 2810 BoxF
960 2752 BoxF
1320 2493 BoxF
1680 2341 BoxF
2040 2010 BoxF
2400 1835 BoxF
1831 3733 BoxF
0.500 UP
0.500 UL
LT1
LTb
1620 3674 M
[ [(Times) 60.0 0.0 true true 0 (grieu-vmpc-s05-27r.cnf)]
] -33.3 MRshow
LT1
1680 3674 M
303 0 V
600 2810 M
360 -26 V
360 -190 V
360 -68 V
360 -186 V
360 -39 V
600 2810 Circle
960 2784 Circle
1320 2594 Circle
1680 2526 Circle
2040 2340 Circle
2400 2301 Circle
1831 3674 Circle
0.500 UP
0.500 UL
LT1
LTb
1620 3615 M
[ [(Times) 60.0 0.0 true true 0 (ibm-2002-20r-k75.cnf)]
] -33.3 MRshow
LT1
1680 3615 M
303 0 V
600 2810 M
960 2650 L
360 -305 V
360 -158 V
360 -300 V
360 -125 V
600 2810 CircleF
960 2650 CircleF
1320 2345 CircleF
1680 2187 CircleF
2040 1887 CircleF
2400 1762 CircleF
1831 3615 CircleF
0.500 UP
0.500 UL
LT1
LTb
1620 3556 M
[ [(Times) 60.0 0.0 true true 0 (ibm-2002-24r3-k100.cnf)]
] -33.3 MRshow
LT1
1680 3556 M
303 0 V
600 2810 M
960 2672 L
360 -292 V
360 -158 V
360 -315 V
360 -140 V
600 2810 TriU
960 2672 TriU
1320 2380 TriU
1680 2222 TriU
2040 1907 TriU
2400 1767 TriU
1831 3556 TriU
0.500 UP
0.500 UL
LT1
LTb
1620 3497 M
[ [(Times) 60.0 0.0 true true 0 (ibm-2002-31)]
[(Times) 48.0 -18.0 true true 0 (1)]
[(Times) 60.0 0.0 true true 0 (r3-k30.cnf)]
] -27.3 MRshow
LT1
1680 3497 M
303 0 V
600 2810 M
360 -42 V
360 -216 V
360 -112 V
360 -259 V
360 -103 V
600 2810 TriUF
960 2768 TriUF
1320 2552 TriUF
1680 2440 TriUF
2040 2181 TriUF
2400 2078 TriUF
1831 3497 TriUF
0.500 UP
0.500 UL
LT1
LTb
1620 3438 M
[ [(Times) 60.0 0.0 true true 0 (ibm-2004-23-k80.cnf)]
] -33.3 MRshow
LT1
1680 3438 M
303 0 V
600 2810 M
960 2625 L
360 -313 V
360 -164 V
360 -308 V
360 -132 V
600 2810 TriD
960 2625 TriD
1320 2312 TriD
1680 2148 TriD
2040 1840 TriD
2400 1708 TriD
1831 3438 TriD
0.500 UP
0.500 UL
LT1
LTb
1620 3379 M
[ [(Times) 60.0 0.0 true true 0 (manol-pipe-c7idw.cnf)]
] -33.3 MRshow
LT1
1680 3379 M
303 0 V
600 2810 M
960 2678 L
360 -267 V
360 -131 V
360 -276 V
360 -121 V
600 2810 TriDF
960 2678 TriDF
1320 2411 TriDF
1680 2280 TriDF
2040 2004 TriDF
2400 1883 TriDF
1831 3379 TriDF
0.500 UP
0.500 UL
LT1
LTb
1620 3320 M
[ [(Times) 60.0 0.0 true true 0 (manol-pipe-g10bid)]
[(Times) 48.0 -18.0 true true 0 (i)]
[(Times) 60.0 0.0 true true 0 (.cnf)]
] -27.3 MRshow
LT1
1680 3320 M
303 0 V
600 2810 M
960 2642 L
360 -335 V
360 -204 V
360 -357 V
360 -183 V
600 2810 Dia
960 2642 Dia
1320 2307 Dia
1680 2103 Dia
2040 1746 Dia
2400 1563 Dia
1831 3320 Dia
0.500 UP
0.500 UL
LT1
LTb
1620 3261 M
[ [(Times) 60.0 0.0 true true 0 (mizh-md5-47-4.cnf)]
] -33.3 MRshow
LT1
1680 3261 M
303 0 V
600 2810 M
960 2707 L
360 -253 V
360 -126 V
360 -298 V
360 -115 V
600 2810 DiaF
960 2707 DiaF
1320 2454 DiaF
1680 2328 DiaF
2040 2030 DiaF
2400 1915 DiaF
1831 3261 DiaF
0.500 UP
0.500 UL
LT1
LTb
1620 3202 M
[ [(Times) 60.0 0.0 true true 0 (mizh-sha0-36-4.cnf)]
] -33.3 MRshow
LT1
1680 3202 M
303 0 V
600 2810 M
360 -51 V
360 -223 V
360 -122 V
360 -242 V
360 -109 V
600 2810 Pent
960 2759 Pent
1320 2536 Pent
1680 2414 Pent
2040 2172 Pent
2400 2063 Pent
1831 3202 Pent
0.500 UP
0.500 UL
LT1
LTb
1620 3143 M
[ [(Times) 60.0 0.0 true true 0 (narai-vpn-10s.cnf)]
] -33.3 MRshow
LT1
1680 3143 M
303 0 V
600 2810 M
960 2327 L
360 -227 V
360 -249 V
360 -495 V
360 -223 V
600 2810 PentF
960 2327 PentF
1320 2100 PentF
1680 1851 PentF
2040 1356 PentF
2400 1133 PentF
1831 3143 PentF
0.500 UP
0.500 UL
LT1
LTb
1620 3084 M
[ [(Times) 60.0 0.0 true true 0 (post-c32s-gcdm16-22.cnf)]
] -33.3 MRshow
LT1
1680 3084 M
303 0 V
600 2810 M
360 -72 V
360 -216 V
360 -94 V
360 -227 V
360 -68 V
600 2810 C0
960 2738 C0
1320 2522 C0
1680 2428 C0
2040 2201 C0
2400 2133 C0
1831 3084 C0
0.500 UP
0.500 UL
LT1
LTb
1620 3025 M
[ [(Times) 60.0 0.0 true true 0 (schup-l2s-motst-2-k315.cnf)]
] -33.3 MRshow
LT1
1680 3025 M
303 0 V
600 2810 M
960 2512 L
360 -377 V
360 -262 V
360 -335 V
360 -195 V
600 2810 C1
960 2512 C1
1320 2135 C1
1680 1873 C1
2040 1538 C1
2400 1343 C1
1831 3025 C1
0.500 UP
0.500 UL
LT1
LTb
1620 2966 M
[ [(Times) 60.0 0.0 true true 0 (simon-s02b-r4b1k1.2.cnf)]
] -33.3 MRshow
LT1
1680 2966 M
303 0 V
600 2810 M
360 -69 V
360 -262 V
360 -183 V
360 -396 V
360 -222 V
600 2810 C2
960 2741 C2
1320 2479 C2
1680 2296 C2
2040 1900 C2
2400 1678 C2
1831 2966 C2
0.500 UP
0.500 UL
LT1
LTb
1620 2907 M
[ [(Times) 60.0 0.0 true true 0 (simon-s02-f2clk-50.cnf)]
] -33.3 MRshow
LT1
1680 2907 M
303 0 V
600 2810 M
360 -54 V
360 -236 V
360 -129 V
360 -268 V
360 -100 V
600 2810 C3
960 2756 C3
1320 2520 C3
1680 2391 C3
2040 2123 C3
2400 2023 C3
1831 2907 C3
0.500 UP
0.500 UL
LT1
LTb
1620 2848 M
[ [(Times) 60.0 0.0 true true 0 (velev-npe-1.0-9dlx-b71.cnf)]
] -33.3 MRshow
LT1
1680 2848 M
303 0 V
600 2810 M
960 2441 L
360 -340 V
360 -259 V
360 -432 V
360 -318 V
600 2810 C4
960 2441 C4
1320 2101 C4
1680 1842 C4
2040 1410 C4
2400 1092 C4
1831 2848 C4
0.500 UL
LTb
600 2810 M
0 -1801 V
1800 0 V
0 1801 R
-1800 0 R
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times Times-Roman
%%Pages: 1
